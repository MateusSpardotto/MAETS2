@model MVCWebPresentationLayer.Models.Insert.JogoInsertViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>JogoInsertViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" name="erroNome" id="erroNome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Preco" class="control-label"></label>
                <input asp-for="Preco" class="form-control" />
                <span asp-validation-for="Preco" name="Preco" id="Preco" class="text-danger"></span>
            </div>

            @{
                string[] classificacao = Enum.GetNames(typeof(DTO.Enums.ClassificacaoIndicativa));
            }

            <div class="form-group">
                <label class="control-label col-md-2">Calssificação</label>
                <div class="col-md-10">
                    <select class="form-control" name="Calssificacao" id="Calssificacao">
                        @for (int i = 0; i < classificacao.Length; i++)
                        {
                        <option value="@i">@classificacao[i]</option>
                        }
                    </select>
                </div>
                <span class="text-danger" name="erroClassificacao" id="erroClassificacao"></span>
            </div>

            

            <div class="form-group">
                <label asp-for="GeneroDTO" class="control-label">Gênero</label>
                <input asp-for="GeneroDTO" class="form-control" />
                <span asp-validation-for="GeneroDTO" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Data de Lançamento</label>
                <input asp-for="DataLancamento" type="date" class="form-control" />
                <span asp-validation-for="DataLancamento" name="erroDataLancamento" id="erroDataLancamento" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Especificacoes" class="control-label"></label>
                <input asp-for="Especificacoes" class="form-control" />
                <span asp-validation-for="Especificacoes" name="erroEspecificacoes" id="erroEspecificacoes" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" id="Create" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#Create").click(function (e) {

                var nome = $("#Nome").val();
                var preco = $("#Preco").val();
                var classificacao = $("#Classificacao").val();
                var especificacoes = $("#Especificacoes").val();
                var dataLancamento = $("#DataLancamento").val();

                var sucesso = true;

                if (nome == "") {
                    $("#erroNome").html("Nome deve ser informado.");
                    sucesso = false;
                }
                else if (nome.length < 5 || nome.length > 50) {
                    $("#erroNome").html("Nome deve conter entre 5 e 50 caracteres.");
                    sucesso = false;
                }
                else {
                    $("#erroNome").html("");
                }

                if (preco == null) {
                    $("#erroPreco").html("Preço deve ser informado.");
                    sucesso = false;
                } else if (preco < 1) {
                    $("#erroPreco").html("Preço não pode ser menor ou igual a zero.");
                    sucesso = false;
                }
                else {
                    $("#erroPreco").html("");
                }

                if (especificacoes == "") {
                    $("#erroEspecificacoes").html("As especificações devem ser informadas.");
                    sucesso = false;
                }
                else if (especificacoes.length < 50 || nome.length > 450) {
                    $("#erroEspecificacoes").html("As especificações devem conter de 50 a 450 caracteres.");
                    sucesso = false;
                }
                else {
                    $("#erroEspecificacoes").html("");
                }

                if (dataLancamento == "") {
                    $("#erroDataLancamento").html("A data de lançamento deve ser informada.");
                    sucesso = false;
                } else if (dataLancamento < Date.now) {
                    $("#erroDataLancamento").html("Data de Lançamento inválida.");
                    sucesso = false;
                }
                else {
                    $("#erroDataLancamento").html("");
                }

                if (classificacao == "" || classificacao == 0) {
                    $("#erroClassificacao").html("A classificação deve ser informada.");
                    sucesso = false;
                }
                else {
                    $("#erroClassificacao").html("");
                }

                 if (!sucesso) {
                    e.preventDefault();
                 }
            });
        });
    </script>
 }